{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nfunction MdbPopoverComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.title, \" \");\n  }\n}\n\nfunction MdbPopoverComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.content);\n  }\n}\n\nfunction MdbPopoverComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.content, \" \");\n  }\n}\n\nclass MdbPopoverComponent {\n  constructor(_cdRef) {\n    this._cdRef = _cdRef;\n    this._hidden = new Subject();\n    this.animationState = 'hidden';\n  }\n\n  get isContentTemplate() {\n    return this.content instanceof TemplateRef;\n  }\n\n  markForCheck() {\n    this._cdRef.markForCheck();\n  }\n\n  onAnimationEnd(event) {\n    if (event.toState === 'hidden') {\n      this._hidden.next();\n    }\n  }\n\n}\n\nMdbPopoverComponent.ɵfac = function MdbPopoverComponent_Factory(t) {\n  return new (t || MdbPopoverComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMdbPopoverComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbPopoverComponent,\n  selectors: [[\"mdb-popover\"]],\n  inputs: {\n    title: \"title\",\n    content: \"content\",\n    animation: \"animation\"\n  },\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"popover\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [\"class\", \"popover-body\", 4, \"ngIf\"], [1, \"popover-header\"], [1, \"popover-body\"], [3, \"ngTemplateOutlet\"]],\n  template: function MdbPopoverComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"@fade.done\", function MdbPopoverComponent_Template_div_animation_fade_done_0_listener($event) {\n        return ctx.onAnimationEnd($event);\n      });\n      i0.ɵɵtemplate(1, MdbPopoverComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, MdbPopoverComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(3, MdbPopoverComponent_div_3_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@fade\", ctx.animationState)(\"@.disabled\", !ctx.animation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isContentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isContentTemplate);\n    }\n  },\n  directives: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1\n    })), state('hidden', style({\n      opacity: 0\n    })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-popover',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1\n      })), state('hidden', style({\n        opacity: 0\n      })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])],\n      template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable-next-line @angular-eslint/component-class-suffix\n\n\nclass MdbPopoverDirective {\n  constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n    this._overlay = _overlay;\n    this._overlayPositionBuilder = _overlayPositionBuilder;\n    this._elementRef = _elementRef;\n    this.mdbPopover = '';\n    this.mdbPopoverTitle = '';\n    this._popoverDisabled = false;\n    this.placement = 'top';\n    this._animation = false;\n    this.trigger = 'click';\n    this.delayShow = 0;\n    this.delayHide = 0;\n    this.offset = 4;\n    this.popoverShow = new EventEmitter();\n    this.popoverShown = new EventEmitter();\n    this.popoverHide = new EventEmitter();\n    this.popoverHidden = new EventEmitter();\n    this._open = false;\n    this._showTimeout = 0;\n    this._hideTimeout = 0;\n    this._destroy$ = new Subject();\n  }\n\n  get popoverDisabled() {\n    return this._popoverDisabled;\n  }\n\n  set popoverDisabled(value) {\n    this._popoverDisabled = coerceBooleanProperty(value);\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(value) {\n    this._animation = coerceBooleanProperty(value);\n  }\n\n  ngOnInit() {\n    if (this.popoverDisabled) {\n      return;\n    }\n\n    this._bindTriggerEvents();\n  }\n\n  ngOnDestroy() {\n    if (this._open) {\n      this.hide();\n    }\n\n    this._destroy$.next();\n\n    this._destroy$.complete();\n  }\n\n  _bindTriggerEvents() {\n    const triggers = this.trigger.split(' ');\n    triggers.forEach(trigger => {\n      if (trigger === 'click') {\n        fromEvent(this._elementRef.nativeElement, trigger).pipe(takeUntil(this._destroy$)).subscribe(() => this.toggle());\n      } else if (trigger !== 'manual') {\n        const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n        const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n        fromEvent(this._elementRef.nativeElement, evIn).pipe(takeUntil(this._destroy$)).subscribe(() => this.show());\n        fromEvent(this._elementRef.nativeElement, evOut).pipe(takeUntil(this._destroy$)).subscribe(() => this.hide());\n      }\n    });\n  }\n\n  _createOverlayConfig() {\n    const positionStrategy = this._overlayPositionBuilder.flexibleConnectedTo(this._elementRef).withPositions(this._getPosition());\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: false,\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      positionStrategy\n    });\n    return overlayConfig;\n  }\n\n  _createOverlay() {\n    this._overlayRef = this._overlay.create(this._createOverlayConfig());\n  }\n\n  _getPosition() {\n    let position;\n    const positionTop = {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetY: -this.offset\n    };\n    const positionBottom = {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'top',\n      offsetY: this.offset\n    };\n    const positionRight = {\n      originX: 'end',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: this.offset\n    };\n    const positionLeft = {\n      originX: 'start',\n      originY: 'center',\n      overlayX: 'end',\n      overlayY: 'center',\n      offsetX: -this.offset\n    };\n\n    switch (this.placement) {\n      case 'top':\n        position = [positionTop, positionBottom];\n        break;\n\n      case 'bottom':\n        position = [positionBottom, positionTop];\n        break;\n\n      case 'left':\n        position = [positionLeft, positionRight, positionTop, positionBottom];\n        break;\n\n      case 'right':\n        position = [positionRight, positionLeft, positionTop, positionBottom];\n        break;\n\n      default:\n        break;\n    }\n\n    return position;\n  }\n\n  show() {\n    if (this._hideTimeout) {\n      this._overlayRef.detach();\n\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n\n    this._createOverlay();\n\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n\n    this._showTimeout = setTimeout(() => {\n      const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n      this.popoverShow.emit(this);\n      this._open = true;\n      this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n      this._tooltipRef.instance.content = this.template || this.mdbPopover;\n      this._tooltipRef.instance.title = this.mdbPopoverTitle;\n      this._tooltipRef.instance.animation = this.animation;\n      this._tooltipRef.instance.animationState = 'visible';\n\n      this._tooltipRef.instance.markForCheck();\n\n      this.popoverShown.emit(this);\n    }, this.delayShow);\n  }\n\n  hide() {\n    if (this._showTimeout) {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = null;\n    } else {\n      return;\n    }\n\n    this._hideTimeout = setTimeout(() => {\n      this.popoverHide.emit(this);\n\n      if (!this._tooltipRef) {\n        this._overlayRef.detach();\n\n        this._open = false;\n        this.popoverHidden.emit(this);\n      } else {\n        this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n          this._overlayRef.detach();\n\n          this._open = false;\n          this.popoverHidden.emit(this);\n        });\n\n        this._tooltipRef.instance.animationState = 'hidden';\n\n        this._tooltipRef.instance.markForCheck();\n      }\n    }, this.delayHide);\n  }\n\n  toggle() {\n    if (this._open) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n}\n\nMdbPopoverDirective.ɵfac = function MdbPopoverDirective_Factory(t) {\n  return new (t || MdbPopoverDirective)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i1$1.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nMdbPopoverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbPopoverDirective,\n  selectors: [[\"\", \"mdbPopover\", \"\"]],\n  inputs: {\n    mdbPopover: \"mdbPopover\",\n    mdbPopoverTitle: \"mdbPopoverTitle\",\n    popoverDisabled: \"popoverDisabled\",\n    placement: \"placement\",\n    template: \"template\",\n    animation: \"animation\",\n    trigger: \"trigger\",\n    delayShow: \"delayShow\",\n    delayHide: \"delayHide\",\n    offset: \"offset\"\n  },\n  outputs: {\n    popoverShow: \"popoverShow\",\n    popoverShown: \"popoverShown\",\n    popoverHide: \"popoverHide\",\n    popoverHidden: \"popoverHidden\"\n  },\n  exportAs: [\"mdbPopover\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbPopover]',\n      exportAs: 'mdbPopover'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i1$1.OverlayPositionBuilder\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    mdbPopover: [{\n      type: Input\n    }],\n    mdbPopoverTitle: [{\n      type: Input\n    }],\n    popoverDisabled: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    trigger: [{\n      type: Input\n    }],\n    delayShow: [{\n      type: Input\n    }],\n    delayHide: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    popoverShow: [{\n      type: Output\n    }],\n    popoverShown: [{\n      type: Output\n    }],\n    popoverHide: [{\n      type: Output\n    }],\n    popoverHidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MdbPopoverModule {}\n\nMdbPopoverModule.ɵfac = function MdbPopoverModule_Factory(t) {\n  return new (t || MdbPopoverModule)();\n};\n\nMdbPopoverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbPopoverModule\n});\nMdbPopoverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, OverlayModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule],\n      declarations: [MdbPopoverDirective, MdbPopoverComponent],\n      exports: [MdbPopoverDirective, MdbPopoverComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };","map":{"version":3,"sources":["/Users/alexcampean/Documents/university/sem_4/WEB/exam/client/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-popover.mjs"],"names":["i0","TemplateRef","Component","ChangeDetectionStrategy","Input","EventEmitter","Directive","Output","NgModule","i1$1","OverlayConfig","OverlayModule","ComponentPortal","trigger","state","style","transition","animate","Subject","fromEvent","i1","CommonModule","takeUntil","first","coerceBooleanProperty","MdbPopoverComponent","constructor","_cdRef","_hidden","animationState","isContentTemplate","content","markForCheck","onAnimationEnd","event","toState","next","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","opacity","type","args","selector","changeDetection","OnPush","animations","template","title","animation","MdbPopoverDirective","_overlay","_overlayPositionBuilder","_elementRef","mdbPopover","mdbPopoverTitle","_popoverDisabled","placement","_animation","delayShow","delayHide","offset","popoverShow","popoverShown","popoverHide","popoverHidden","_open","_showTimeout","_hideTimeout","_destroy$","popoverDisabled","value","ngOnInit","_bindTriggerEvents","ngOnDestroy","hide","complete","triggers","split","forEach","nativeElement","pipe","subscribe","toggle","evIn","evOut","show","_createOverlayConfig","positionStrategy","flexibleConnectedTo","withPositions","_getPosition","overlayConfig","hasBackdrop","scrollStrategy","scrollStrategies","reposition","_createOverlay","_overlayRef","create","position","positionTop","originX","originY","overlayX","overlayY","offsetY","positionBottom","positionRight","offsetX","positionLeft","detach","clearTimeout","setTimeout","tooltipPortal","emit","_tooltipRef","attach","instance","Overlay","OverlayPositionBuilder","ElementRef","ɵdir","exportAs","MdbPopoverModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nclass MdbPopoverComponent {\n    constructor(_cdRef) {\n        this._cdRef = _cdRef;\n        this._hidden = new Subject();\n        this.animationState = 'hidden';\n    }\n    get isContentTemplate() {\n        return this.content instanceof TemplateRef;\n    }\n    markForCheck() {\n        this._cdRef.markForCheck();\n    }\n    onAnimationEnd(event) {\n        if (event.toState === 'hidden') {\n            this._hidden.next();\n        }\n    }\n}\nMdbPopoverComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMdbPopoverComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbPopoverComponent, selector: \"mdb-popover\", inputs: { title: \"title\", content: \"content\", animation: \"animation\" }, ngImport: i0, template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1 })),\n            state('hidden', style({ opacity: 0 })),\n            transition('visible <=> hidden', animate('150ms linear')),\n            transition(':enter', animate('150ms linear')),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-popover', changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1 })),\n                            state('hidden', style({ opacity: 0 })),\n                            transition('visible <=> hidden', animate('150ms linear')),\n                            transition(':enter', animate('150ms linear')),\n                        ]),\n                    ], template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { title: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbPopoverDirective {\n    constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n        this._overlay = _overlay;\n        this._overlayPositionBuilder = _overlayPositionBuilder;\n        this._elementRef = _elementRef;\n        this.mdbPopover = '';\n        this.mdbPopoverTitle = '';\n        this._popoverDisabled = false;\n        this.placement = 'top';\n        this._animation = false;\n        this.trigger = 'click';\n        this.delayShow = 0;\n        this.delayHide = 0;\n        this.offset = 4;\n        this.popoverShow = new EventEmitter();\n        this.popoverShown = new EventEmitter();\n        this.popoverHide = new EventEmitter();\n        this.popoverHidden = new EventEmitter();\n        this._open = false;\n        this._showTimeout = 0;\n        this._hideTimeout = 0;\n        this._destroy$ = new Subject();\n    }\n    get popoverDisabled() {\n        return this._popoverDisabled;\n    }\n    set popoverDisabled(value) {\n        this._popoverDisabled = coerceBooleanProperty(value);\n    }\n    get animation() {\n        return this._animation;\n    }\n    set animation(value) {\n        this._animation = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        if (this.popoverDisabled) {\n            return;\n        }\n        this._bindTriggerEvents();\n    }\n    ngOnDestroy() {\n        if (this._open) {\n            this.hide();\n        }\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _bindTriggerEvents() {\n        const triggers = this.trigger.split(' ');\n        triggers.forEach((trigger) => {\n            if (trigger === 'click') {\n                fromEvent(this._elementRef.nativeElement, trigger)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.toggle());\n            }\n            else if (trigger !== 'manual') {\n                const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n                const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n                fromEvent(this._elementRef.nativeElement, evIn)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.show());\n                fromEvent(this._elementRef.nativeElement, evOut)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.hide());\n            }\n        });\n    }\n    _createOverlayConfig() {\n        const positionStrategy = this._overlayPositionBuilder\n            .flexibleConnectedTo(this._elementRef)\n            .withPositions(this._getPosition());\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: false,\n            scrollStrategy: this._overlay.scrollStrategies.reposition(),\n            positionStrategy,\n        });\n        return overlayConfig;\n    }\n    _createOverlay() {\n        this._overlayRef = this._overlay.create(this._createOverlayConfig());\n    }\n    _getPosition() {\n        let position;\n        const positionTop = {\n            originX: 'center',\n            originY: 'top',\n            overlayX: 'center',\n            overlayY: 'bottom',\n            offsetY: -this.offset,\n        };\n        const positionBottom = {\n            originX: 'center',\n            originY: 'bottom',\n            overlayX: 'center',\n            overlayY: 'top',\n            offsetY: this.offset,\n        };\n        const positionRight = {\n            originX: 'end',\n            originY: 'center',\n            overlayX: 'start',\n            overlayY: 'center',\n            offsetX: this.offset,\n        };\n        const positionLeft = {\n            originX: 'start',\n            originY: 'center',\n            overlayX: 'end',\n            overlayY: 'center',\n            offsetX: -this.offset,\n        };\n        switch (this.placement) {\n            case 'top':\n                position = [positionTop, positionBottom];\n                break;\n            case 'bottom':\n                position = [positionBottom, positionTop];\n                break;\n            case 'left':\n                position = [positionLeft, positionRight, positionTop, positionBottom];\n                break;\n            case 'right':\n                position = [positionRight, positionLeft, positionTop, positionBottom];\n                break;\n            default:\n                break;\n        }\n        return position;\n    }\n    show() {\n        if (this._hideTimeout) {\n            this._overlayRef.detach();\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._createOverlay();\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._showTimeout = setTimeout(() => {\n            const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n            this.popoverShow.emit(this);\n            this._open = true;\n            this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n            this._tooltipRef.instance.content = this.template || this.mdbPopover;\n            this._tooltipRef.instance.title = this.mdbPopoverTitle;\n            this._tooltipRef.instance.animation = this.animation;\n            this._tooltipRef.instance.animationState = 'visible';\n            this._tooltipRef.instance.markForCheck();\n            this.popoverShown.emit(this);\n        }, this.delayShow);\n    }\n    hide() {\n        if (this._showTimeout) {\n            clearTimeout(this._showTimeout);\n            this._showTimeout = null;\n        }\n        else {\n            return;\n        }\n        this._hideTimeout = setTimeout(() => {\n            this.popoverHide.emit(this);\n            if (!this._tooltipRef) {\n                this._overlayRef.detach();\n                this._open = false;\n                this.popoverHidden.emit(this);\n            }\n            else {\n                this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n                    this._overlayRef.detach();\n                    this._open = false;\n                    this.popoverHidden.emit(this);\n                });\n                this._tooltipRef.instance.animationState = 'hidden';\n                this._tooltipRef.instance.markForCheck();\n            }\n        }, this.delayHide);\n    }\n    toggle() {\n        if (this._open) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n}\nMdbPopoverDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverDirective, deps: [{ token: i1$1.Overlay }, { token: i1$1.OverlayPositionBuilder }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMdbPopoverDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbPopoverDirective, selector: \"[mdbPopover]\", inputs: { mdbPopover: \"mdbPopover\", mdbPopoverTitle: \"mdbPopoverTitle\", popoverDisabled: \"popoverDisabled\", placement: \"placement\", template: \"template\", animation: \"animation\", trigger: \"trigger\", delayShow: \"delayShow\", delayHide: \"delayHide\", offset: \"offset\" }, outputs: { popoverShow: \"popoverShow\", popoverShown: \"popoverShown\", popoverHide: \"popoverHide\", popoverHidden: \"popoverHidden\" }, exportAs: [\"mdbPopover\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbPopover]',\n                    exportAs: 'mdbPopover',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i1$1.OverlayPositionBuilder }, { type: i0.ElementRef }]; }, propDecorators: { mdbPopover: [{\n                type: Input\n            }], mdbPopoverTitle: [{\n                type: Input\n            }], popoverDisabled: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], trigger: [{\n                type: Input\n            }], delayShow: [{\n                type: Input\n            }], delayHide: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], popoverShow: [{\n                type: Output\n            }], popoverShown: [{\n                type: Output\n            }], popoverHide: [{\n                type: Output\n            }], popoverHidden: [{\n                type: Output\n            }] } });\n\nclass MdbPopoverModule {\n}\nMdbPopoverModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbPopoverModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, declarations: [MdbPopoverDirective, MdbPopoverComponent], imports: [CommonModule, OverlayModule], exports: [MdbPopoverDirective, MdbPopoverComponent] });\nMdbPopoverModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, imports: [[CommonModule, OverlayModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule],\n                    declarations: [MdbPopoverDirective, MdbPopoverComponent],\n                    exports: [MdbPopoverDirective, MdbPopoverComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };\n"]},"metadata":{},"sourceType":"module"}