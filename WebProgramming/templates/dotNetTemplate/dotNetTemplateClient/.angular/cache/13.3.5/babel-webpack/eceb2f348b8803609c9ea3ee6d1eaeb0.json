{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ViewChild, ContentChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"dropdownTemplate\"];\nconst _c1 = [\"mdbDropdown\", \"\"];\n\nfunction MdbDropdownDirective_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵlistener(\"@fade.done\", function MdbDropdownDirective_ng_template_2_Template_div_animation_fade_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onAnimationEnd($event);\n    });\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@fade\", ctx_r1._animationState)(\"@.disabled\", !ctx_r1.animation);\n  }\n}\n\nconst _c2 = [\"*\", [[\"\", 8, \"dropdown-toggle\"]], [[\"\", 8, \"dropdown-menu\"]]];\nconst _c3 = [\"*\", \".dropdown-toggle\", \".dropdown-menu\"];\n\nclass MdbDropdownToggleDirective {\n  constructor() {}\n\n}\n\nMdbDropdownToggleDirective.ɵfac = function MdbDropdownToggleDirective_Factory(t) {\n  return new (t || MdbDropdownToggleDirective)();\n};\n\nMdbDropdownToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbDropdownToggleDirective,\n  selectors: [[\"\", \"mdbDropdownToggle\", \"\"]],\n  exportAs: [\"mdbDropdownToggle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbDropdownToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mdbDropdownToggle]',\n      exportAs: 'mdbDropdownToggle'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})(); // eslint-disable-next-line @angular-eslint/component-class-suffix\n\n\nclass MdbDropdownMenuDirective {\n  constructor() {}\n\n}\n\nMdbDropdownMenuDirective.ɵfac = function MdbDropdownMenuDirective_Factory(t) {\n  return new (t || MdbDropdownMenuDirective)();\n};\n\nMdbDropdownMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbDropdownMenuDirective,\n  selectors: [[\"\", \"mdbDropdownMenu\", \"\"]],\n  exportAs: [\"mdbDropdownMenu\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbDropdownMenuDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbDropdownMenu]',\n      exportAs: 'mdbDropdownMenu'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})(); // eslint-disable-next-line @angular-eslint/component-class-suffix\n\n\nclass MdbDropdownDirective {\n  constructor(_overlay, _overlayPositionBuilder, _elementRef, _vcr, _breakpointObserver, _cdRef) {\n    this._overlay = _overlay;\n    this._overlayPositionBuilder = _overlayPositionBuilder;\n    this._elementRef = _elementRef;\n    this._vcr = _vcr;\n    this._breakpointObserver = _breakpointObserver;\n    this._cdRef = _cdRef;\n    this._animation = true;\n    this.offset = 0;\n    this.closeOnOutsideClick = true;\n    this.closeOnItemClick = true;\n    this.closeOnEsc = true;\n    this.dropdownShow = new EventEmitter();\n    this.dropdownShown = new EventEmitter();\n    this.dropdownHide = new EventEmitter();\n    this.dropdownHidden = new EventEmitter();\n    this._open = false;\n    this._breakpoints = {\n      isSm: this._breakpointObserver.isMatched('(min-width: 576px)'),\n      isMd: this._breakpointObserver.isMatched('(min-width: 768px)'),\n      isLg: this._breakpointObserver.isMatched('(min-width: 992px)'),\n      isXl: this._breakpointObserver.isMatched('(min-width: 1200px)'),\n      isXxl: this._breakpointObserver.isMatched('(min-width: 1400px)')\n    };\n    this._destroy$ = new Subject();\n    this._animationState = 'hidden';\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(value) {\n    this._animation = coerceBooleanProperty(value);\n  }\n\n  ngAfterContentInit() {\n    this._bindDropdownToggleClick();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n\n      this._overlayRef.dispose();\n    }\n\n    this._destroy$.next();\n\n    this._destroy$.complete();\n  }\n\n  _bindDropdownToggleClick() {\n    fromEvent(this._dropdownToggle.nativeElement, 'click').pipe(takeUntil(this._destroy$)).subscribe(() => this.toggle());\n  }\n\n  _createOverlayConfig() {\n    return new OverlayConfig({\n      hasBackdrop: false,\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      positionStrategy: this._createPositionStrategy()\n    });\n  }\n\n  _createOverlay() {\n    this._overlayRef = this._overlay.create(this._createOverlayConfig());\n  }\n\n  _createPositionStrategy() {\n    const positionStrategy = this._overlayPositionBuilder.flexibleConnectedTo(this._dropdownToggle).withPositions(this._getPosition()).withFlexibleDimensions(false);\n\n    return positionStrategy;\n  }\n\n  _getPosition() {\n    this._isDropUp = this._elementRef.nativeElement.classList.contains('dropup');\n    this._isDropStart = this._elementRef.nativeElement.classList.contains('dropstart');\n    this._isDropEnd = this._elementRef.nativeElement.classList.contains('dropend');\n    this._isDropdownMenuEnd = this._dropdownMenu.nativeElement.classList.contains('dropdown-menu-end');\n    this._xPosition = this._isDropdownMenuEnd ? 'end' : 'start';\n    const regex = new RegExp(/dropdown-menu-(sm|md|lg|xl|xxl)-(start|end)/, 'g');\n\n    const responsiveClass = this._dropdownMenu.nativeElement.className.match(regex);\n\n    if (responsiveClass) {\n      this._subscribeBrakpoints();\n\n      const positionRegex = new RegExp(/start|end/, 'g');\n      const breakpointRegex = new RegExp(/(sm|md|lg|xl|xxl)/, 'g');\n      const dropdownPosition = positionRegex.exec(responsiveClass)[0];\n      const breakpoint = breakpointRegex.exec(responsiveClass)[0];\n\n      switch (true) {\n        case breakpoint === 'xxl' && this._breakpoints.isXxl:\n          this._xPosition = dropdownPosition;\n          break;\n\n        case breakpoint === 'xl' && this._breakpoints.isXl:\n          this._xPosition = dropdownPosition;\n          break;\n\n        case breakpoint === 'lg' && this._breakpoints.isLg:\n          this._xPosition = dropdownPosition;\n          break;\n\n        case breakpoint === 'md' && this._breakpoints.isMd:\n          this._xPosition = dropdownPosition;\n          break;\n\n        case breakpoint === 'sm' && this._breakpoints.isSm:\n          this._xPosition = dropdownPosition;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    let position;\n    const positionDropup = {\n      originX: this._xPosition,\n      originY: 'top',\n      overlayX: this._xPosition,\n      overlayY: 'bottom',\n      offsetY: -this.offset\n    };\n    const positionDropdown = {\n      originX: this._xPosition,\n      originY: 'bottom',\n      overlayX: this._xPosition,\n      overlayY: 'top',\n      offsetY: this.offset\n    };\n    const positionDropstart = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'top',\n      offsetX: this.offset\n    };\n    const positionDropend = {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: -this.offset\n    };\n\n    switch (true) {\n      case this._isDropEnd:\n        position = [positionDropend, positionDropstart];\n        break;\n\n      case this._isDropStart:\n        position = [positionDropstart, positionDropend];\n        break;\n\n      case this._isDropUp:\n        position = [positionDropup, positionDropdown];\n        break;\n\n      default:\n        position = [positionDropdown, positionDropup];\n        break;\n    }\n\n    return position;\n  }\n\n  _listenToEscKeyup(overlayRef) {\n    return fromEvent(document, 'keyup').pipe(filter(event => event.key === 'Escape'), takeUntil(overlayRef.detachments()));\n  }\n\n  _listenToClick(overlayRef, origin) {\n    return fromEvent(document, 'click').pipe(filter(event => {\n      const target = event.target;\n\n      const isInsideMenu = this._dropdownMenu.nativeElement.contains(target);\n\n      const notTogglerIcon = !this._dropdownToggle.nativeElement.contains(target);\n      const notCustomContent = !isInsideMenu || target.classList && target.classList.contains('dropdown-item');\n      const notOrigin = target !== origin;\n      return notOrigin && notTogglerIcon && notCustomContent;\n    }), takeUntil(overlayRef.detachments()));\n  }\n\n  onAnimationEnd(event) {\n    if (event.fromState === 'visible' && event.toState === 'hidden') {\n      this._overlayRef.detach();\n\n      this._open = false;\n      this.dropdownHidden.emit(this);\n    }\n\n    if (event.fromState === 'hidden' && event.toState === 'visible') {\n      this.dropdownShown.emit(this);\n    }\n  }\n\n  _subscribeBrakpoints() {\n    const brakpoints = ['(min-width: 576px)', '(min-width: 768px)', '(min-width: 992px)', '(min-width: 1200px)', '(min-width: 1400px)'];\n    this._breakpointSubscription = this._breakpointObserver.observe(brakpoints).pipe(takeUntil(this._destroy$)).subscribe(result => {\n      Object.keys(this._breakpoints).forEach((key, index) => {\n        const brakpointValue = brakpoints[index];\n        const newBreakpoint = result.breakpoints[brakpointValue];\n        const isBreakpointChanged = newBreakpoint !== this._breakpoints[key];\n\n        if (!isBreakpointChanged) {\n          return;\n        }\n\n        this._breakpoints[key] = newBreakpoint;\n\n        if (this._open) {\n          this._overlayRef.updatePositionStrategy(this._createPositionStrategy());\n        }\n      });\n    });\n  }\n\n  show() {\n    this._cdRef.markForCheck();\n\n    if (this._open) {\n      return;\n    }\n\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._portal = new TemplatePortal(this._template, this._vcr);\n    this.dropdownShow.emit(this);\n    this._open = true;\n\n    this._overlayRef.attach(this._portal);\n\n    this._listenToEscKeyup(this._overlayRef).subscribe(isEsc => {\n      if (isEsc && this.closeOnEsc) {\n        this.hide();\n      }\n    });\n\n    this._overlayRef.keydownEvents().pipe(takeUntil(this._overlayRef.detachments())).subscribe(event => {\n      this._handleKeyboardNavigation(event);\n    });\n\n    this._listenToClick(this._overlayRef, this._dropdownToggle.nativeElement).subscribe(event => {\n      const target = event.target;\n      const isDropdownItem = target.classList && target.classList.contains('dropdown-item');\n\n      if (this.closeOnItemClick && isDropdownItem) {\n        this.hide();\n        return;\n      }\n\n      if (this.closeOnOutsideClick && !isDropdownItem) {\n        this.hide();\n        return;\n      }\n    });\n\n    this._animationState = 'visible';\n  }\n\n  _handleKeyboardNavigation(event) {\n    const items = Array.from(this._dropdownMenu.nativeElement.querySelectorAll('.dropdown-item'));\n    const key = event.key;\n    const activeElement = this._dropdownMenu.nativeElement.ownerDocument.activeElement;\n\n    if (items.length === 0) {\n      return;\n    }\n\n    let index = items.indexOf(activeElement);\n\n    switch (key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        index = Math.min(index + 1, items.length - 1);\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n\n        if (index === -1) {\n          index = items.length - 1;\n          break;\n        }\n\n        index = Math.max(index - 1, 0);\n        break;\n    }\n\n    const nextActiveElement = items[index];\n\n    if (nextActiveElement) {\n      nextActiveElement.focus();\n    }\n  }\n\n  hide() {\n    this._cdRef.markForCheck();\n\n    if (!this._open) {\n      return;\n    }\n\n    this.dropdownHide.emit(this);\n    this._animationState = 'hidden';\n  }\n\n  toggle() {\n    this._cdRef.markForCheck();\n\n    if (this._open) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n}\n\nMdbDropdownDirective.ɵfac = function MdbDropdownDirective_Factory(t) {\n  return new (t || MdbDropdownDirective)(i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i1.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.BreakpointObserver), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMdbDropdownDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbDropdownDirective,\n  selectors: [[\"\", \"mdbDropdown\", \"\"]],\n  contentQueries: function MdbDropdownDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MdbDropdownToggleDirective, 5, ElementRef);\n      i0.ɵɵcontentQuery(dirIndex, MdbDropdownMenuDirective, 5, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dropdownToggle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dropdownMenu = _t.first);\n    }\n  },\n  viewQuery: function MdbDropdownDirective_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    offset: \"offset\",\n    closeOnOutsideClick: \"closeOnOutsideClick\",\n    closeOnItemClick: \"closeOnItemClick\",\n    closeOnEsc: \"closeOnEsc\"\n  },\n  outputs: {\n    dropdownShow: \"dropdownShow\",\n    dropdownShown: \"dropdownShown\",\n    dropdownHide: \"dropdownHide\",\n    dropdownHidden: \"dropdownHidden\"\n  },\n  attrs: _c1,\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 0,\n  consts: [[\"dropdownTemplate\", \"\"]],\n  template: function MdbDropdownDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵprojection(0);\n      i0.ɵɵprojection(1, 1);\n      i0.ɵɵtemplate(2, MdbDropdownDirective_ng_template_2_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1\n    })), state('hidden', style({\n      opacity: 0\n    })), transition('visible => hidden', animate('150ms linear')), transition('hidden => visible', [style({\n      opacity: 0\n    }), animate('150ms linear')])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbDropdownDirective, [{\n    type: Component,\n    args: [{\n      selector: '[mdbDropdown]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1\n      })), state('hidden', style({\n        opacity: 0\n      })), transition('visible => hidden', animate('150ms linear')), transition('hidden => visible', [style({\n        opacity: 0\n      }), animate('150ms linear')])])],\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\".dropdown-toggle\\\"></ng-content>\\n<ng-template #dropdownTemplate>\\n  <div [@fade]=\\\"_animationState\\\" (@fade.done)=\\\"onAnimationEnd($event)\\\" [@.disabled]=\\\"!animation\\\">\\n    <ng-content select=\\\".dropdown-menu\\\"></ng-content>\\n  </div>\\n</ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i1.Overlay\n    }, {\n      type: i1.OverlayPositionBuilder\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.BreakpointObserver\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _template: [{\n      type: ViewChild,\n      args: ['dropdownTemplate']\n    }],\n    _dropdownToggle: [{\n      type: ContentChild,\n      args: [MdbDropdownToggleDirective, {\n        read: ElementRef\n      }]\n    }],\n    _dropdownMenu: [{\n      type: ContentChild,\n      args: [MdbDropdownMenuDirective, {\n        read: ElementRef\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    closeOnOutsideClick: [{\n      type: Input\n    }],\n    closeOnItemClick: [{\n      type: Input\n    }],\n    closeOnEsc: [{\n      type: Input\n    }],\n    dropdownShow: [{\n      type: Output\n    }],\n    dropdownShown: [{\n      type: Output\n    }],\n    dropdownHide: [{\n      type: Output\n    }],\n    dropdownHidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MdbDropdownModule {}\n\nMdbDropdownModule.ɵfac = function MdbDropdownModule_Factory(t) {\n  return new (t || MdbDropdownModule)();\n};\n\nMdbDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbDropdownModule\n});\nMdbDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, OverlayModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule],\n      declarations: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective],\n      exports: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbDropdownDirective, MdbDropdownMenuDirective, MdbDropdownModule, MdbDropdownToggleDirective };","map":{"version":3,"sources":["/Users/alexcampean/Documents/university/sem_4/WEB/examTemplates/dotNetTemplate/dotNetTemplateClient/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-dropdown.mjs"],"names":["i0","Directive","EventEmitter","ElementRef","Component","ChangeDetectionStrategy","ViewChild","ContentChild","Input","Output","NgModule","i1","OverlayConfig","OverlayModule","TemplatePortal","Subject","fromEvent","takeUntil","filter","trigger","state","style","transition","animate","coerceBooleanProperty","i2","CommonModule","MdbDropdownToggleDirective","constructor","ɵfac","ɵdir","type","args","selector","exportAs","MdbDropdownMenuDirective","MdbDropdownDirective","_overlay","_overlayPositionBuilder","_elementRef","_vcr","_breakpointObserver","_cdRef","_animation","offset","closeOnOutsideClick","closeOnItemClick","closeOnEsc","dropdownShow","dropdownShown","dropdownHide","dropdownHidden","_open","_breakpoints","isSm","isMatched","isMd","isLg","isXl","isXxl","_destroy$","_animationState","animation","value","ngAfterContentInit","_bindDropdownToggleClick","ngOnDestroy","_overlayRef","detach","dispose","next","complete","_dropdownToggle","nativeElement","pipe","subscribe","toggle","_createOverlayConfig","hasBackdrop","scrollStrategy","scrollStrategies","reposition","positionStrategy","_createPositionStrategy","_createOverlay","create","flexibleConnectedTo","withPositions","_getPosition","withFlexibleDimensions","_isDropUp","classList","contains","_isDropStart","_isDropEnd","_isDropdownMenuEnd","_dropdownMenu","_xPosition","regex","RegExp","responsiveClass","className","match","_subscribeBrakpoints","positionRegex","breakpointRegex","dropdownPosition","exec","breakpoint","position","positionDropup","originX","originY","overlayX","overlayY","offsetY","positionDropdown","positionDropstart","offsetX","positionDropend","_listenToEscKeyup","overlayRef","document","event","key","detachments","_listenToClick","origin","target","isInsideMenu","notTogglerIcon","notCustomContent","notOrigin","onAnimationEnd","fromState","toState","emit","brakpoints","_breakpointSubscription","observe","result","Object","keys","forEach","index","brakpointValue","newBreakpoint","breakpoints","isBreakpointChanged","updatePositionStrategy","show","markForCheck","_portal","_template","attach","isEsc","hide","keydownEvents","_handleKeyboardNavigation","isDropdownItem","items","Array","from","querySelectorAll","activeElement","ownerDocument","length","indexOf","preventDefault","Math","min","max","nextActiveElement","focus","Overlay","OverlayPositionBuilder","ViewContainerRef","BreakpointObserver","ChangeDetectorRef","ɵcmp","opacity","changeDetection","OnPush","animations","template","read","MdbDropdownModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ViewChild, ContentChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { CommonModule } from '@angular/common';\n\nclass MdbDropdownToggleDirective {\n    constructor() { }\n}\nMdbDropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownToggleDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMdbDropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbDropdownToggleDirective, selector: \"[mdbDropdownToggle]\", exportAs: [\"mdbDropdownToggle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownToggleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mdbDropdownToggle]',\n                    exportAs: 'mdbDropdownToggle',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbDropdownMenuDirective {\n    constructor() { }\n}\nMdbDropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownMenuDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMdbDropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbDropdownMenuDirective, selector: \"[mdbDropdownMenu]\", exportAs: [\"mdbDropdownMenu\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbDropdownMenu]',\n                    exportAs: 'mdbDropdownMenu',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbDropdownDirective {\n    constructor(_overlay, _overlayPositionBuilder, _elementRef, _vcr, _breakpointObserver, _cdRef) {\n        this._overlay = _overlay;\n        this._overlayPositionBuilder = _overlayPositionBuilder;\n        this._elementRef = _elementRef;\n        this._vcr = _vcr;\n        this._breakpointObserver = _breakpointObserver;\n        this._cdRef = _cdRef;\n        this._animation = true;\n        this.offset = 0;\n        this.closeOnOutsideClick = true;\n        this.closeOnItemClick = true;\n        this.closeOnEsc = true;\n        this.dropdownShow = new EventEmitter();\n        this.dropdownShown = new EventEmitter();\n        this.dropdownHide = new EventEmitter();\n        this.dropdownHidden = new EventEmitter();\n        this._open = false;\n        this._breakpoints = {\n            isSm: this._breakpointObserver.isMatched('(min-width: 576px)'),\n            isMd: this._breakpointObserver.isMatched('(min-width: 768px)'),\n            isLg: this._breakpointObserver.isMatched('(min-width: 992px)'),\n            isXl: this._breakpointObserver.isMatched('(min-width: 1200px)'),\n            isXxl: this._breakpointObserver.isMatched('(min-width: 1400px)'),\n        };\n        this._destroy$ = new Subject();\n        this._animationState = 'hidden';\n    }\n    get animation() {\n        return this._animation;\n    }\n    set animation(value) {\n        this._animation = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        this._bindDropdownToggleClick();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this._overlayRef.dispose();\n        }\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _bindDropdownToggleClick() {\n        fromEvent(this._dropdownToggle.nativeElement, 'click')\n            .pipe(takeUntil(this._destroy$))\n            .subscribe(() => this.toggle());\n    }\n    _createOverlayConfig() {\n        return new OverlayConfig({\n            hasBackdrop: false,\n            scrollStrategy: this._overlay.scrollStrategies.reposition(),\n            positionStrategy: this._createPositionStrategy(),\n        });\n    }\n    _createOverlay() {\n        this._overlayRef = this._overlay.create(this._createOverlayConfig());\n    }\n    _createPositionStrategy() {\n        const positionStrategy = this._overlayPositionBuilder\n            .flexibleConnectedTo(this._dropdownToggle)\n            .withPositions(this._getPosition())\n            .withFlexibleDimensions(false);\n        return positionStrategy;\n    }\n    _getPosition() {\n        this._isDropUp = this._elementRef.nativeElement.classList.contains('dropup');\n        this._isDropStart = this._elementRef.nativeElement.classList.contains('dropstart');\n        this._isDropEnd = this._elementRef.nativeElement.classList.contains('dropend');\n        this._isDropdownMenuEnd =\n            this._dropdownMenu.nativeElement.classList.contains('dropdown-menu-end');\n        this._xPosition = this._isDropdownMenuEnd ? 'end' : 'start';\n        const regex = new RegExp(/dropdown-menu-(sm|md|lg|xl|xxl)-(start|end)/, 'g');\n        const responsiveClass = this._dropdownMenu.nativeElement.className.match(regex);\n        if (responsiveClass) {\n            this._subscribeBrakpoints();\n            const positionRegex = new RegExp(/start|end/, 'g');\n            const breakpointRegex = new RegExp(/(sm|md|lg|xl|xxl)/, 'g');\n            const dropdownPosition = positionRegex.exec(responsiveClass)[0];\n            const breakpoint = breakpointRegex.exec(responsiveClass)[0];\n            switch (true) {\n                case breakpoint === 'xxl' && this._breakpoints.isXxl:\n                    this._xPosition = dropdownPosition;\n                    break;\n                case breakpoint === 'xl' && this._breakpoints.isXl:\n                    this._xPosition = dropdownPosition;\n                    break;\n                case breakpoint === 'lg' && this._breakpoints.isLg:\n                    this._xPosition = dropdownPosition;\n                    break;\n                case breakpoint === 'md' && this._breakpoints.isMd:\n                    this._xPosition = dropdownPosition;\n                    break;\n                case breakpoint === 'sm' && this._breakpoints.isSm:\n                    this._xPosition = dropdownPosition;\n                    break;\n                default:\n                    break;\n            }\n        }\n        let position;\n        const positionDropup = {\n            originX: this._xPosition,\n            originY: 'top',\n            overlayX: this._xPosition,\n            overlayY: 'bottom',\n            offsetY: -this.offset,\n        };\n        const positionDropdown = {\n            originX: this._xPosition,\n            originY: 'bottom',\n            overlayX: this._xPosition,\n            overlayY: 'top',\n            offsetY: this.offset,\n        };\n        const positionDropstart = {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'top',\n            offsetX: this.offset,\n        };\n        const positionDropend = {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'top',\n            offsetX: -this.offset,\n        };\n        switch (true) {\n            case this._isDropEnd:\n                position = [positionDropend, positionDropstart];\n                break;\n            case this._isDropStart:\n                position = [positionDropstart, positionDropend];\n                break;\n            case this._isDropUp:\n                position = [positionDropup, positionDropdown];\n                break;\n            default:\n                position = [positionDropdown, positionDropup];\n                break;\n        }\n        return position;\n    }\n    _listenToEscKeyup(overlayRef) {\n        return fromEvent(document, 'keyup').pipe(filter((event) => event.key === 'Escape'), takeUntil(overlayRef.detachments()));\n    }\n    _listenToClick(overlayRef, origin) {\n        return fromEvent(document, 'click').pipe(filter((event) => {\n            const target = event.target;\n            const isInsideMenu = this._dropdownMenu.nativeElement.contains(target);\n            const notTogglerIcon = !this._dropdownToggle.nativeElement.contains(target);\n            const notCustomContent = !isInsideMenu || (target.classList && target.classList.contains('dropdown-item'));\n            const notOrigin = target !== origin;\n            return notOrigin && notTogglerIcon && notCustomContent;\n        }), takeUntil(overlayRef.detachments()));\n    }\n    onAnimationEnd(event) {\n        if (event.fromState === 'visible' && event.toState === 'hidden') {\n            this._overlayRef.detach();\n            this._open = false;\n            this.dropdownHidden.emit(this);\n        }\n        if (event.fromState === 'hidden' && event.toState === 'visible') {\n            this.dropdownShown.emit(this);\n        }\n    }\n    _subscribeBrakpoints() {\n        const brakpoints = [\n            '(min-width: 576px)',\n            '(min-width: 768px)',\n            '(min-width: 992px)',\n            '(min-width: 1200px)',\n            '(min-width: 1400px)',\n        ];\n        this._breakpointSubscription = this._breakpointObserver\n            .observe(brakpoints)\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((result) => {\n            Object.keys(this._breakpoints).forEach((key, index) => {\n                const brakpointValue = brakpoints[index];\n                const newBreakpoint = result.breakpoints[brakpointValue];\n                const isBreakpointChanged = newBreakpoint !== this._breakpoints[key];\n                if (!isBreakpointChanged) {\n                    return;\n                }\n                this._breakpoints[key] = newBreakpoint;\n                if (this._open) {\n                    this._overlayRef.updatePositionStrategy(this._createPositionStrategy());\n                }\n            });\n        });\n    }\n    show() {\n        this._cdRef.markForCheck();\n        if (this._open) {\n            return;\n        }\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        this._portal = new TemplatePortal(this._template, this._vcr);\n        this.dropdownShow.emit(this);\n        this._open = true;\n        this._overlayRef.attach(this._portal);\n        this._listenToEscKeyup(this._overlayRef).subscribe((isEsc) => {\n            if (isEsc && this.closeOnEsc) {\n                this.hide();\n            }\n        });\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._overlayRef.detachments()))\n            .subscribe((event) => {\n            this._handleKeyboardNavigation(event);\n        });\n        this._listenToClick(this._overlayRef, this._dropdownToggle.nativeElement).subscribe((event) => {\n            const target = event.target;\n            const isDropdownItem = target.classList && target.classList.contains('dropdown-item');\n            if (this.closeOnItemClick && isDropdownItem) {\n                this.hide();\n                return;\n            }\n            if (this.closeOnOutsideClick && !isDropdownItem) {\n                this.hide();\n                return;\n            }\n        });\n        this._animationState = 'visible';\n    }\n    _handleKeyboardNavigation(event) {\n        const items = Array.from(this._dropdownMenu.nativeElement.querySelectorAll('.dropdown-item'));\n        const key = event.key;\n        const activeElement = this._dropdownMenu.nativeElement.ownerDocument.activeElement;\n        if (items.length === 0) {\n            return;\n        }\n        let index = items.indexOf(activeElement);\n        switch (key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                index = Math.min(index + 1, items.length - 1);\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                if (index === -1) {\n                    index = items.length - 1;\n                    break;\n                }\n                index = Math.max(index - 1, 0);\n                break;\n        }\n        const nextActiveElement = items[index];\n        if (nextActiveElement) {\n            nextActiveElement.focus();\n        }\n    }\n    hide() {\n        this._cdRef.markForCheck();\n        if (!this._open) {\n            return;\n        }\n        this.dropdownHide.emit(this);\n        this._animationState = 'hidden';\n    }\n    toggle() {\n        this._cdRef.markForCheck();\n        if (this._open) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n}\nMdbDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownDirective, deps: [{ token: i1.Overlay }, { token: i1.OverlayPositionBuilder }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i2.BreakpointObserver }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMdbDropdownDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbDropdownDirective, selector: \"[mdbDropdown]\", inputs: { animation: \"animation\", offset: \"offset\", closeOnOutsideClick: \"closeOnOutsideClick\", closeOnItemClick: \"closeOnItemClick\", closeOnEsc: \"closeOnEsc\" }, outputs: { dropdownShow: \"dropdownShow\", dropdownShown: \"dropdownShown\", dropdownHide: \"dropdownHide\", dropdownHidden: \"dropdownHidden\" }, queries: [{ propertyName: \"_dropdownToggle\", first: true, predicate: MdbDropdownToggleDirective, descendants: true, read: ElementRef }, { propertyName: \"_dropdownMenu\", first: true, predicate: MdbDropdownMenuDirective, descendants: true, read: ElementRef }], viewQueries: [{ propertyName: \"_template\", first: true, predicate: [\"dropdownTemplate\"], descendants: true }], ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\".dropdown-toggle\\\"></ng-content>\\n<ng-template #dropdownTemplate>\\n  <div [@fade]=\\\"_animationState\\\" (@fade.done)=\\\"onAnimationEnd($event)\\\" [@.disabled]=\\\"!animation\\\">\\n    <ng-content select=\\\".dropdown-menu\\\"></ng-content>\\n  </div>\\n</ng-template>\\n\", animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1 })),\n            state('hidden', style({ opacity: 0 })),\n            transition('visible => hidden', animate('150ms linear')),\n            transition('hidden => visible', [style({ opacity: 0 }), animate('150ms linear')]),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownDirective, decorators: [{\n            type: Component,\n            args: [{ selector: '[mdbDropdown]', changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1 })),\n                            state('hidden', style({ opacity: 0 })),\n                            transition('visible => hidden', animate('150ms linear')),\n                            transition('hidden => visible', [style({ opacity: 0 }), animate('150ms linear')]),\n                        ]),\n                    ], template: \"<ng-content></ng-content>\\n<ng-content select=\\\".dropdown-toggle\\\"></ng-content>\\n<ng-template #dropdownTemplate>\\n  <div [@fade]=\\\"_animationState\\\" (@fade.done)=\\\"onAnimationEnd($event)\\\" [@.disabled]=\\\"!animation\\\">\\n    <ng-content select=\\\".dropdown-menu\\\"></ng-content>\\n  </div>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i1.OverlayPositionBuilder }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i2.BreakpointObserver }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _template: [{\n                type: ViewChild,\n                args: ['dropdownTemplate']\n            }], _dropdownToggle: [{\n                type: ContentChild,\n                args: [MdbDropdownToggleDirective, { read: ElementRef }]\n            }], _dropdownMenu: [{\n                type: ContentChild,\n                args: [MdbDropdownMenuDirective, { read: ElementRef }]\n            }], animation: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], closeOnOutsideClick: [{\n                type: Input\n            }], closeOnItemClick: [{\n                type: Input\n            }], closeOnEsc: [{\n                type: Input\n            }], dropdownShow: [{\n                type: Output\n            }], dropdownShown: [{\n                type: Output\n            }], dropdownHide: [{\n                type: Output\n            }], dropdownHidden: [{\n                type: Output\n            }] } });\n\nclass MdbDropdownModule {\n}\nMdbDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownModule, declarations: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective], imports: [CommonModule, OverlayModule], exports: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective] });\nMdbDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownModule, imports: [[CommonModule, OverlayModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule],\n                    declarations: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective],\n                    exports: [MdbDropdownDirective, MdbDropdownToggleDirective, MdbDropdownMenuDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbDropdownDirective, MdbDropdownMenuDirective, MdbDropdownModule, MdbDropdownToggleDirective };\n"]},"metadata":{},"sourceType":"module"}