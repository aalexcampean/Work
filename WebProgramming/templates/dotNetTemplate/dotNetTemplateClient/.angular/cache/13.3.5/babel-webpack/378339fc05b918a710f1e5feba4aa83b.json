{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Input, Output, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { Subject, merge } from 'rxjs';\nimport * as i2 from 'mdb-angular-ui-kit/collapse';\nimport { MdbCollapseDirective, MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nfunction MdbAccordionItemComponent_3_ng_template_0_Template(rf, ctx) {}\n\nfunction MdbAccordionItemComponent_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MdbAccordionItemComponent_3_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0._headerTemplate);\n  }\n}\n\nfunction MdbAccordionItemComponent_6_ng_template_0_Template(rf, ctx) {}\n\nfunction MdbAccordionItemComponent_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MdbAccordionItemComponent_6_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._bodyTemplate);\n  }\n}\n\nconst _c0 = [\"*\"];\nconst MDB_ACCORDION_ITEM_BODY = new InjectionToken('MdbAccordionItemBodyDirective');\n\nclass MdbAccordionItemBodyDirective {\n  constructor(template) {\n    this.template = template;\n  }\n\n}\n\nMdbAccordionItemBodyDirective.ɵfac = function MdbAccordionItemBodyDirective_Factory(t) {\n  return new (t || MdbAccordionItemBodyDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nMdbAccordionItemBodyDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbAccordionItemBodyDirective,\n  selectors: [[\"\", \"mdbAccordionItemBody\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MDB_ACCORDION_ITEM_BODY,\n    useExisting: MdbAccordionItemBodyDirective\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbAccordionItemBodyDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbAccordionItemBody]',\n      providers: [{\n        provide: MDB_ACCORDION_ITEM_BODY,\n        useExisting: MdbAccordionItemBodyDirective\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nconst MDB_ACCORDION_ITEM_HEADER = new InjectionToken('MdbAccordionItemHeaderDirective');\n\nclass MdbAccordionItemHeaderDirective {\n  constructor(template) {\n    this.template = template;\n  }\n\n}\n\nMdbAccordionItemHeaderDirective.ɵfac = function MdbAccordionItemHeaderDirective_Factory(t) {\n  return new (t || MdbAccordionItemHeaderDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nMdbAccordionItemHeaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbAccordionItemHeaderDirective,\n  selectors: [[\"\", \"mdbAccordionItemHeader\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MDB_ACCORDION_ITEM_HEADER,\n    useExisting: MdbAccordionItemHeaderDirective\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbAccordionItemHeaderDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbAccordionItemHeader]',\n      providers: [{\n        provide: MDB_ACCORDION_ITEM_HEADER,\n        useExisting: MdbAccordionItemHeaderDirective\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nlet uniqueHeaderId = 0;\nlet uniqueId = 0;\n\nclass MdbAccordionItemComponent {\n  constructor(_cdRef) {\n    this._cdRef = _cdRef;\n    this.id = `mdb-accordion-item-${uniqueId++}`;\n    this._headerId = `mdb-accordion-item-header-${uniqueHeaderId++}`;\n    this._isInitialized = false;\n    this._shouldOpenOnInit = false;\n    this.itemShow = new EventEmitter();\n    this.itemShown = new EventEmitter();\n    this.itemHide = new EventEmitter();\n    this.itemHidden = new EventEmitter();\n    this.accordionItem = true;\n    this.show$ = new Subject();\n    this._collapsed = true;\n    this._addCollapsedClass = true;\n  }\n\n  set collapsed(value) {\n    if (!this._isInitialized) {\n      if (!value) {\n        this._shouldOpenOnInit = true;\n      }\n\n      return;\n    }\n\n    if (value) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n\n    if (this._shouldOpenOnInit) {\n      this.show();\n    }\n  }\n\n  toggle() {\n    this.collapse.toggle();\n  }\n\n  show() {\n    this.collapse.show();\n\n    this._cdRef.markForCheck();\n  }\n\n  hide() {\n    this.collapse.hide();\n\n    this._cdRef.markForCheck();\n  }\n\n  onShow() {\n    this._addCollapsedClass = false;\n    this.itemShow.emit(this);\n    this.show$.next(this);\n  }\n\n  onHide() {\n    this._addCollapsedClass = true;\n    this.itemHide.emit(this);\n  }\n\n  onShown() {\n    this._collapsed = false;\n    this.itemShown.emit(this);\n  }\n\n  onHidden() {\n    this._collapsed = true;\n    this.itemHidden.emit(this);\n  }\n\n}\n\nMdbAccordionItemComponent.ɵfac = function MdbAccordionItemComponent_Factory(t) {\n  return new (t || MdbAccordionItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMdbAccordionItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbAccordionItemComponent,\n  selectors: [[\"mdb-accordion-item\"]],\n  contentQueries: function MdbAccordionItemComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MDB_ACCORDION_ITEM_HEADER, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, MDB_ACCORDION_ITEM_BODY, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyTemplate = _t.first);\n    }\n  },\n  viewQuery: function MdbAccordionItemComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MdbCollapseDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.collapse = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function MdbAccordionItemComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"accordion-item\", ctx.accordionItem);\n    }\n  },\n  inputs: {\n    header: \"header\",\n    collapsed: \"collapsed\",\n    id: \"id\"\n  },\n  outputs: {\n    itemShow: \"itemShow\",\n    itemShown: \"itemShown\",\n    itemHide: \"itemHide\",\n    itemHidden: \"itemHidden\"\n  },\n  decls: 7,\n  vars: 10,\n  consts: [[1, \"accordion-header\", 3, \"id\"], [\"type\", \"button\", 1, \"accordion-button\", 3, \"click\"], [4, \"ngIf\"], [\"mdbCollapse\", \"\", 3, \"collapseShow\", \"collapseHide\"], [1, \"accordion-body\"], [3, \"ngTemplateOutlet\"]],\n  template: function MdbAccordionItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MdbAccordionItemComponent_Template_button_click_1_listener() {\n        return ctx.toggle();\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵtemplate(3, MdbAccordionItemComponent_3_Template, 1, 1, null, 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵlistener(\"collapseShow\", function MdbAccordionItemComponent_Template_div_collapseShow_4_listener() {\n        return ctx.onShow();\n      })(\"collapseHide\", function MdbAccordionItemComponent_Template_div_collapseHide_4_listener() {\n        return ctx.onHide();\n      })(\"collapseShow\", function MdbAccordionItemComponent_Template_div_collapseShow_4_listener() {\n        return ctx.onShown();\n      })(\"collapseHide\", function MdbAccordionItemComponent_Template_div_collapseHide_4_listener() {\n        return ctx.onHidden();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, MdbAccordionItemComponent_6_Template, 1, 1, null, 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx._headerId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"collapsed\", ctx._addCollapsedClass);\n      i0.ɵɵattribute(\"aria-expanded\", !ctx._collapsed)(\"aria-controls\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.header, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._headerTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.id)(\"aria-labelledby\", ctx._headerId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx._bodyTemplate);\n    }\n  },\n  directives: [i1.NgIf, i1.NgTemplateOutlet, i2.MdbCollapseDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbAccordionItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-accordion-item',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h2 class=\\\"accordion-header\\\" [id]=\\\"_headerId\\\">\\n  <button\\n    class=\\\"accordion-button\\\"\\n    type=\\\"button\\\"\\n    [attr.aria-expanded]=\\\"!_collapsed\\\"\\n    [attr.aria-controls]=\\\"id\\\"\\n    [class.collapsed]=\\\"_addCollapsedClass\\\"\\n    (click)=\\\"toggle()\\\"\\n  >\\n    {{ header }}\\n    <ng-template *ngIf=\\\"_headerTemplate\\\" [ngTemplateOutlet]=\\\"_headerTemplate\\\"></ng-template>\\n  </button>\\n</h2>\\n<div\\n  mdbCollapse\\n  (collapseShow)=\\\"onShow()\\\"\\n  (collapseHide)=\\\"onHide()\\\"\\n  (collapseShow)=\\\"onShown()\\\"\\n  (collapseHide)=\\\"onHidden()\\\"\\n  [attr.id]=\\\"id\\\"\\n  [attr.aria-labelledby]=\\\"_headerId\\\"\\n>\\n  <div class=\\\"accordion-body\\\">\\n    <ng-template *ngIf=\\\"_bodyTemplate\\\" [ngTemplateOutlet]=\\\"_bodyTemplate\\\"></ng-template>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _headerTemplate: [{\n      type: ContentChild,\n      args: [MDB_ACCORDION_ITEM_HEADER, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _bodyTemplate: [{\n      type: ContentChild,\n      args: [MDB_ACCORDION_ITEM_BODY, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    collapse: [{\n      type: ViewChild,\n      args: [MdbCollapseDirective, {\n        static: true\n      }]\n    }],\n    header: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    itemShow: [{\n      type: Output\n    }],\n    itemShown: [{\n      type: Output\n    }],\n    itemHide: [{\n      type: Output\n    }],\n    itemHidden: [{\n      type: Output\n    }],\n    accordionItem: [{\n      type: HostBinding,\n      args: ['class.accordion-item']\n    }]\n  });\n})();\n\nclass MdbAccordionComponent {\n  constructor() {\n    this._flush = false;\n    this._multiple = false;\n    this.accordion = true;\n  }\n\n  get flush() {\n    return this._flush;\n  }\n\n  set flush(value) {\n    this._flush = coerceBooleanProperty(value);\n  }\n\n  get multiple() {\n    return this._multiple;\n  }\n\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n\n  get addFlushClass() {\n    return this.flush;\n  }\n\n  ngAfterContentInit() {\n    this.items.changes.pipe(startWith(this.items), switchMap(items => {\n      return merge(...items.map(item => item.show$));\n    })).subscribe(clickedItem => this._handleMultipleItems(clickedItem));\n  }\n\n  _handleMultipleItems(clickedItem) {\n    if (!this.multiple) {\n      const itemsToClose = this.items.filter(item => item !== clickedItem && !item._collapsed);\n      itemsToClose.forEach(item => item.hide());\n    }\n  }\n\n}\n\nMdbAccordionComponent.ɵfac = function MdbAccordionComponent_Factory(t) {\n  return new (t || MdbAccordionComponent)();\n};\n\nMdbAccordionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbAccordionComponent,\n  selectors: [[\"mdb-accordion\"]],\n  contentQueries: function MdbAccordionComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MdbAccordionItemComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function MdbAccordionComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"accordion\", ctx.accordion)(\"accordion-flush\", ctx.addFlushClass);\n    }\n  },\n  inputs: {\n    flush: \"flush\",\n    multiple: \"multiple\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MdbAccordionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbAccordionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-accordion',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content></ng-content>\\n\"\n    }]\n  }], function () {\n    return [];\n  }, {\n    items: [{\n      type: ContentChildren,\n      args: [MdbAccordionItemComponent]\n    }],\n    flush: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    accordion: [{\n      type: HostBinding,\n      args: ['class.accordion']\n    }],\n    addFlushClass: [{\n      type: HostBinding,\n      args: ['class.accordion-flush']\n    }]\n  });\n})();\n\nclass MdbAccordionModule {}\n\nMdbAccordionModule.ɵfac = function MdbAccordionModule_Factory(t) {\n  return new (t || MdbAccordionModule)();\n};\n\nMdbAccordionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbAccordionModule\n});\nMdbAccordionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MdbCollapseModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbAccordionComponent, MdbAccordionItemComponent, MdbAccordionItemHeaderDirective, MdbAccordionItemBodyDirective],\n      imports: [CommonModule, MdbCollapseModule],\n      exports: [MdbAccordionComponent, MdbAccordionItemComponent, MdbAccordionItemHeaderDirective, MdbAccordionItemBodyDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbAccordionComponent, MdbAccordionItemBodyDirective, MdbAccordionItemComponent, MdbAccordionItemHeaderDirective, MdbAccordionModule };","map":{"version":3,"sources":["/Users/alexcampean/Documents/university/sem_4/WEB/examTemplates/dotNetTemplate/dotNetTemplateClient/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-accordion.mjs"],"names":["i0","InjectionToken","Directive","EventEmitter","TemplateRef","Component","ChangeDetectionStrategy","ContentChild","ViewChild","Input","Output","HostBinding","ContentChildren","NgModule","startWith","switchMap","Subject","merge","i2","MdbCollapseDirective","MdbCollapseModule","i1","CommonModule","coerceBooleanProperty","MDB_ACCORDION_ITEM_BODY","MdbAccordionItemBodyDirective","constructor","template","ɵfac","ɵdir","provide","useExisting","type","args","selector","providers","MDB_ACCORDION_ITEM_HEADER","MdbAccordionItemHeaderDirective","uniqueHeaderId","uniqueId","MdbAccordionItemComponent","_cdRef","id","_headerId","_isInitialized","_shouldOpenOnInit","itemShow","itemShown","itemHide","itemHidden","accordionItem","show$","_collapsed","_addCollapsedClass","collapsed","value","hide","show","ngOnInit","toggle","collapse","markForCheck","onShow","emit","next","onHide","onShown","onHidden","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","changeDetection","OnPush","_headerTemplate","read","static","_bodyTemplate","header","MdbAccordionComponent","_flush","_multiple","accordion","flush","multiple","addFlushClass","ngAfterContentInit","items","changes","pipe","map","item","subscribe","clickedItem","_handleMultipleItems","itemsToClose","filter","forEach","MdbAccordionModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Input, Output, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { Subject, merge } from 'rxjs';\nimport * as i2 from 'mdb-angular-ui-kit/collapse';\nimport { MdbCollapseDirective, MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nconst MDB_ACCORDION_ITEM_BODY = new InjectionToken('MdbAccordionItemBodyDirective');\nclass MdbAccordionItemBodyDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMdbAccordionItemBodyDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemBodyDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMdbAccordionItemBodyDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbAccordionItemBodyDirective, selector: \"[mdbAccordionItemBody]\", providers: [{ provide: MDB_ACCORDION_ITEM_BODY, useExisting: MdbAccordionItemBodyDirective }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemBodyDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbAccordionItemBody]',\n                    providers: [{ provide: MDB_ACCORDION_ITEM_BODY, useExisting: MdbAccordionItemBodyDirective }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst MDB_ACCORDION_ITEM_HEADER = new InjectionToken('MdbAccordionItemHeaderDirective');\nclass MdbAccordionItemHeaderDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nMdbAccordionItemHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMdbAccordionItemHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbAccordionItemHeaderDirective, selector: \"[mdbAccordionItemHeader]\", providers: [{ provide: MDB_ACCORDION_ITEM_HEADER, useExisting: MdbAccordionItemHeaderDirective }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemHeaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbAccordionItemHeader]',\n                    providers: [{ provide: MDB_ACCORDION_ITEM_HEADER, useExisting: MdbAccordionItemHeaderDirective }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nlet uniqueHeaderId = 0;\nlet uniqueId = 0;\nclass MdbAccordionItemComponent {\n    constructor(_cdRef) {\n        this._cdRef = _cdRef;\n        this.id = `mdb-accordion-item-${uniqueId++}`;\n        this._headerId = `mdb-accordion-item-header-${uniqueHeaderId++}`;\n        this._isInitialized = false;\n        this._shouldOpenOnInit = false;\n        this.itemShow = new EventEmitter();\n        this.itemShown = new EventEmitter();\n        this.itemHide = new EventEmitter();\n        this.itemHidden = new EventEmitter();\n        this.accordionItem = true;\n        this.show$ = new Subject();\n        this._collapsed = true;\n        this._addCollapsedClass = true;\n    }\n    set collapsed(value) {\n        if (!this._isInitialized) {\n            if (!value) {\n                this._shouldOpenOnInit = true;\n            }\n            return;\n        }\n        if (value) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        if (this._shouldOpenOnInit) {\n            this.show();\n        }\n    }\n    toggle() {\n        this.collapse.toggle();\n    }\n    show() {\n        this.collapse.show();\n        this._cdRef.markForCheck();\n    }\n    hide() {\n        this.collapse.hide();\n        this._cdRef.markForCheck();\n    }\n    onShow() {\n        this._addCollapsedClass = false;\n        this.itemShow.emit(this);\n        this.show$.next(this);\n    }\n    onHide() {\n        this._addCollapsedClass = true;\n        this.itemHide.emit(this);\n    }\n    onShown() {\n        this._collapsed = false;\n        this.itemShown.emit(this);\n    }\n    onHidden() {\n        this._collapsed = true;\n        this.itemHidden.emit(this);\n    }\n}\nMdbAccordionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMdbAccordionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbAccordionItemComponent, selector: \"mdb-accordion-item\", inputs: { header: \"header\", collapsed: \"collapsed\", id: \"id\" }, outputs: { itemShow: \"itemShow\", itemShown: \"itemShown\", itemHide: \"itemHide\", itemHidden: \"itemHidden\" }, host: { properties: { \"class.accordion-item\": \"this.accordionItem\" } }, queries: [{ propertyName: \"_headerTemplate\", first: true, predicate: MDB_ACCORDION_ITEM_HEADER, descendants: true, read: TemplateRef, static: true }, { propertyName: \"_bodyTemplate\", first: true, predicate: MDB_ACCORDION_ITEM_BODY, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"collapse\", first: true, predicate: MdbCollapseDirective, descendants: true, static: true }], ngImport: i0, template: \"<h2 class=\\\"accordion-header\\\" [id]=\\\"_headerId\\\">\\n  <button\\n    class=\\\"accordion-button\\\"\\n    type=\\\"button\\\"\\n    [attr.aria-expanded]=\\\"!_collapsed\\\"\\n    [attr.aria-controls]=\\\"id\\\"\\n    [class.collapsed]=\\\"_addCollapsedClass\\\"\\n    (click)=\\\"toggle()\\\"\\n  >\\n    {{ header }}\\n    <ng-template *ngIf=\\\"_headerTemplate\\\" [ngTemplateOutlet]=\\\"_headerTemplate\\\"></ng-template>\\n  </button>\\n</h2>\\n<div\\n  mdbCollapse\\n  (collapseShow)=\\\"onShow()\\\"\\n  (collapseHide)=\\\"onHide()\\\"\\n  (collapseShow)=\\\"onShown()\\\"\\n  (collapseHide)=\\\"onHidden()\\\"\\n  [attr.id]=\\\"id\\\"\\n  [attr.aria-labelledby]=\\\"_headerId\\\"\\n>\\n  <div class=\\\"accordion-body\\\">\\n    <ng-template *ngIf=\\\"_bodyTemplate\\\" [ngTemplateOutlet]=\\\"_bodyTemplate\\\"></ng-template>\\n  </div>\\n</div>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.MdbCollapseDirective, selector: \"[mdbCollapse]\", inputs: [\"collapsed\"], outputs: [\"collapseShow\", \"collapseShown\", \"collapseHide\", \"collapseHidden\"], exportAs: [\"mdbCollapse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-accordion-item', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h2 class=\\\"accordion-header\\\" [id]=\\\"_headerId\\\">\\n  <button\\n    class=\\\"accordion-button\\\"\\n    type=\\\"button\\\"\\n    [attr.aria-expanded]=\\\"!_collapsed\\\"\\n    [attr.aria-controls]=\\\"id\\\"\\n    [class.collapsed]=\\\"_addCollapsedClass\\\"\\n    (click)=\\\"toggle()\\\"\\n  >\\n    {{ header }}\\n    <ng-template *ngIf=\\\"_headerTemplate\\\" [ngTemplateOutlet]=\\\"_headerTemplate\\\"></ng-template>\\n  </button>\\n</h2>\\n<div\\n  mdbCollapse\\n  (collapseShow)=\\\"onShow()\\\"\\n  (collapseHide)=\\\"onHide()\\\"\\n  (collapseShow)=\\\"onShown()\\\"\\n  (collapseHide)=\\\"onHidden()\\\"\\n  [attr.id]=\\\"id\\\"\\n  [attr.aria-labelledby]=\\\"_headerId\\\"\\n>\\n  <div class=\\\"accordion-body\\\">\\n    <ng-template *ngIf=\\\"_bodyTemplate\\\" [ngTemplateOutlet]=\\\"_bodyTemplate\\\"></ng-template>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { _headerTemplate: [{\n                type: ContentChild,\n                args: [MDB_ACCORDION_ITEM_HEADER, { read: TemplateRef, static: true }]\n            }], _bodyTemplate: [{\n                type: ContentChild,\n                args: [MDB_ACCORDION_ITEM_BODY, { read: TemplateRef, static: true }]\n            }], collapse: [{\n                type: ViewChild,\n                args: [MdbCollapseDirective, { static: true }]\n            }], header: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], itemShow: [{\n                type: Output\n            }], itemShown: [{\n                type: Output\n            }], itemHide: [{\n                type: Output\n            }], itemHidden: [{\n                type: Output\n            }], accordionItem: [{\n                type: HostBinding,\n                args: ['class.accordion-item']\n            }] } });\n\nclass MdbAccordionComponent {\n    constructor() {\n        this._flush = false;\n        this._multiple = false;\n        this.accordion = true;\n    }\n    get flush() {\n        return this._flush;\n    }\n    set flush(value) {\n        this._flush = coerceBooleanProperty(value);\n    }\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    get addFlushClass() {\n        return this.flush;\n    }\n    ngAfterContentInit() {\n        this.items.changes\n            .pipe(startWith(this.items), switchMap((items) => {\n            return merge(...items.map((item) => item.show$));\n        }))\n            .subscribe((clickedItem) => this._handleMultipleItems(clickedItem));\n    }\n    _handleMultipleItems(clickedItem) {\n        if (!this.multiple) {\n            const itemsToClose = this.items.filter((item) => item !== clickedItem && !item._collapsed);\n            itemsToClose.forEach((item) => item.hide());\n        }\n    }\n}\nMdbAccordionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMdbAccordionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbAccordionComponent, selector: \"mdb-accordion\", inputs: { flush: \"flush\", multiple: \"multiple\" }, host: { properties: { \"class.accordion\": \"this.accordion\", \"class.accordion-flush\": \"this.addFlushClass\" } }, queries: [{ propertyName: \"items\", predicate: MdbAccordionItemComponent }], ngImport: i0, template: \"<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-accordion', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\" }]\n        }], ctorParameters: function () { return []; }, propDecorators: { items: [{\n                type: ContentChildren,\n                args: [MdbAccordionItemComponent]\n            }], flush: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], accordion: [{\n                type: HostBinding,\n                args: ['class.accordion']\n            }], addFlushClass: [{\n                type: HostBinding,\n                args: ['class.accordion-flush']\n            }] } });\n\nclass MdbAccordionModule {\n}\nMdbAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionModule, declarations: [MdbAccordionComponent,\n        MdbAccordionItemComponent,\n        MdbAccordionItemHeaderDirective,\n        MdbAccordionItemBodyDirective], imports: [CommonModule, MdbCollapseModule], exports: [MdbAccordionComponent,\n        MdbAccordionItemComponent,\n        MdbAccordionItemHeaderDirective,\n        MdbAccordionItemBodyDirective] });\nMdbAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionModule, imports: [[CommonModule, MdbCollapseModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MdbAccordionComponent,\n                        MdbAccordionItemComponent,\n                        MdbAccordionItemHeaderDirective,\n                        MdbAccordionItemBodyDirective,\n                    ],\n                    imports: [CommonModule, MdbCollapseModule],\n                    exports: [\n                        MdbAccordionComponent,\n                        MdbAccordionItemComponent,\n                        MdbAccordionItemHeaderDirective,\n                        MdbAccordionItemBodyDirective,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbAccordionComponent, MdbAccordionItemBodyDirective, MdbAccordionItemComponent, MdbAccordionItemHeaderDirective, MdbAccordionModule };\n"]},"metadata":{},"sourceType":"module"}