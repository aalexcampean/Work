{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nconst TRANSITION_BREAK_OPACITY = 0.5;\nconst GRADIENT = 'rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%';\nconst DEFAULT_RIPPLE_COLOR = [0, 0, 0];\nconst BOOTSTRAP_COLORS = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nclass MdbRippleDirective {\n  constructor(_elementRef, _renderer) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._rippleCentered = false;\n    this.rippleColor = '';\n    this.rippleDuration = '500ms';\n    this.rippleRadius = 0;\n    this._rippleUnbound = false;\n    this.ripple = true;\n  }\n\n  get rippleCentered() {\n    return this._rippleCentered;\n  }\n\n  set rippleCentered(value) {\n    this._rippleCentered = coerceBooleanProperty(value);\n  }\n\n  get rippleUnbound() {\n    return this._rippleUnbound;\n  }\n\n  set rippleUnbound(value) {\n    this._rippleUnbound = coerceBooleanProperty(value);\n  }\n\n  get host() {\n    return this._elementRef.nativeElement;\n  }\n\n  _createRipple(event) {\n    const {\n      layerX,\n      layerY\n    } = event;\n    const offsetX = layerX;\n    const offsetY = layerY;\n    const height = this.host.offsetHeight;\n    const width = this.host.offsetWidth;\n\n    const duration = this._durationToMsNumber(this.rippleDuration);\n\n    const diameterOptions = {\n      offsetX: this.rippleCentered ? height / 2 : offsetX,\n      offsetY: this.rippleCentered ? width / 2 : offsetY,\n      height,\n      width\n    };\n\n    const diameter = this._getDiameter(diameterOptions);\n\n    const radiusValue = this.rippleRadius || diameter / 2;\n    const opacity = {\n      delay: duration * TRANSITION_BREAK_OPACITY,\n      duration: duration - duration * TRANSITION_BREAK_OPACITY\n    };\n    const styles = {\n      left: this.rippleCentered ? `${width / 2 - radiusValue}px` : `${offsetX - radiusValue}px`,\n      top: this.rippleCentered ? `${height / 2 - radiusValue}px` : `${offsetY - radiusValue}px`,\n      height: `${this.rippleRadius * 2 || diameter}px`,\n      width: `${this.rippleRadius * 2 || diameter}px`,\n      transitionDelay: `0s, ${opacity.delay}ms`,\n      transitionDuration: `${duration}ms, ${opacity.duration}ms`\n    };\n\n    const rippleHTML = this._renderer.createElement('div');\n\n    this._createHTMLRipple(this.host, rippleHTML, styles);\n\n    this._removeHTMLRipple(rippleHTML, duration);\n  }\n\n  _createHTMLRipple(wrapper, ripple, styles) {\n    Object.keys(styles).forEach(property => ripple.style[property] = styles[property]);\n\n    this._renderer.addClass(ripple, 'ripple-wave');\n\n    if (this.rippleColor !== '') {\n      this._removeOldColorClasses(wrapper);\n\n      this._addColor(ripple, wrapper);\n    }\n\n    this._toggleUnbound(wrapper);\n\n    this._appendRipple(ripple, wrapper);\n  }\n\n  _removeHTMLRipple(ripple, duration) {\n    setTimeout(() => {\n      if (ripple) {\n        ripple.remove();\n      }\n    }, duration);\n  }\n\n  _durationToMsNumber(time) {\n    return Number(time.replace('ms', '').replace('s', '000'));\n  }\n\n  _getDiameter({\n    offsetX,\n    offsetY,\n    height,\n    width\n  }) {\n    const top = offsetY <= height / 2;\n    const left = offsetX <= width / 2;\n\n    const pythagorean = (sideA, sideB) => Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n\n    const positionCenter = offsetY === height / 2 && offsetX === width / 2; // mouse position on the quadrants of the coordinate system\n\n    const quadrant = {\n      first: top === true && left === false,\n      second: top === true && left === true,\n      third: top === false && left === true,\n      fourth: top === false && left === false\n    };\n    const getCorner = {\n      topLeft: pythagorean(offsetX, offsetY),\n      topRight: pythagorean(width - offsetX, offsetY),\n      bottomLeft: pythagorean(offsetX, height - offsetY),\n      bottomRight: pythagorean(width - offsetX, height - offsetY)\n    };\n    let diameter = 0;\n\n    if (positionCenter || quadrant.fourth) {\n      diameter = getCorner.topLeft;\n    } else if (quadrant.third) {\n      diameter = getCorner.topRight;\n    } else if (quadrant.second) {\n      diameter = getCorner.bottomRight;\n    } else if (quadrant.first) {\n      diameter = getCorner.bottomLeft;\n    }\n\n    return diameter * 2;\n  }\n\n  _appendRipple(target, parent) {\n    const FIX_ADD_RIPPLE_EFFECT = 50; // delay for active animations\n\n    this._renderer.appendChild(parent, target);\n\n    setTimeout(() => {\n      this._renderer.addClass(target, 'active');\n    }, FIX_ADD_RIPPLE_EFFECT);\n  }\n\n  _toggleUnbound(target) {\n    if (this.rippleUnbound) {\n      this._renderer.addClass(target, 'ripple-surface-unbound');\n    } else {\n      this._renderer.removeClass(target, 'ripple-surface-unbound');\n    }\n  }\n\n  _addColor(target, parent) {\n    const isBootstrapColor = BOOTSTRAP_COLORS.find(color => color === this.rippleColor.toLowerCase());\n\n    if (isBootstrapColor) {\n      this._renderer.addClass(parent, `${'ripple-surface'}-${this.rippleColor.toLowerCase()}`);\n    } else {\n      const rgbValue = this._colorToRGB(this.rippleColor).join(',');\n\n      const gradientImage = GRADIENT.split('{{color}}').join(`${rgbValue}`);\n      target.style.backgroundImage = `radial-gradient(circle, ${gradientImage})`;\n    }\n  }\n\n  _removeOldColorClasses(target) {\n    const REGEXP_CLASS_COLOR = new RegExp(`${'ripple-surface'}-[a-z]+`, 'gi');\n    const PARENT_CLASSS_COLOR = target.classList.value.match(REGEXP_CLASS_COLOR) || [];\n    PARENT_CLASSS_COLOR.forEach(className => {\n      this._renderer.removeClass(target, className);\n    });\n  }\n\n  _colorToRGB(color) {\n    // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n    function hexToRgb(color) {\n      const HEX_COLOR_LENGTH = 7;\n      const IS_SHORT_HEX = color.length < HEX_COLOR_LENGTH;\n\n      if (IS_SHORT_HEX) {\n        color = `#${color[1]}${color[1]}${color[2]}${color[2]}${color[3]}${color[3]}`;\n      }\n\n      return [parseInt(color.substr(1, 2), 16), parseInt(color.substr(3, 2), 16), parseInt(color.substr(5, 2), 16)];\n    } // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n\n\n    function namedColorsToRgba(color) {\n      const tempElem = document.body.appendChild(document.createElement('fictum'));\n      const flag = 'rgb(1, 2, 3)';\n      tempElem.style.color = flag;\n\n      if (tempElem.style.color !== flag) {\n        return DEFAULT_RIPPLE_COLOR;\n      }\n\n      tempElem.style.color = color;\n\n      if (tempElem.style.color === flag || tempElem.style.color === '') {\n        return DEFAULT_RIPPLE_COLOR;\n      } // color parse failed\n\n\n      color = getComputedStyle(tempElem).color;\n      document.body.removeChild(tempElem);\n      return color;\n    } // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n\n\n    function rgbaToRgb(color) {\n      color = color.match(/[.\\d]+/g).map(a => +Number(a));\n      color.length = 3;\n      return color;\n    }\n\n    if (color.toLowerCase() === 'transparent') {\n      return DEFAULT_RIPPLE_COLOR;\n    }\n\n    if (color[0] === '#') {\n      return hexToRgb(color);\n    }\n\n    if (color.indexOf('rgb') === -1) {\n      color = namedColorsToRgba(color);\n    }\n\n    if (color.indexOf('rgb') === 0) {\n      return rgbaToRgb(color);\n    }\n\n    return DEFAULT_RIPPLE_COLOR;\n  }\n\n}\n\nMdbRippleDirective.ɵfac = function MdbRippleDirective_Factory(t) {\n  return new (t || MdbRippleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nMdbRippleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbRippleDirective,\n  selectors: [[\"\", \"mdbRipple\", \"\"]],\n  hostVars: 2,\n  hostBindings: function MdbRippleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MdbRippleDirective_click_HostBindingHandler($event) {\n        return ctx._createRipple($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ripple-surface\", ctx.ripple);\n    }\n  },\n  inputs: {\n    rippleCentered: \"rippleCentered\",\n    rippleColor: \"rippleColor\",\n    rippleDuration: \"rippleDuration\",\n    rippleRadius: \"rippleRadius\",\n    rippleUnbound: \"rippleUnbound\"\n  },\n  exportAs: [\"mdbRipple\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRippleDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbRipple]',\n      exportAs: 'mdbRipple'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    rippleCentered: [{\n      type: Input\n    }],\n    rippleColor: [{\n      type: Input\n    }],\n    rippleDuration: [{\n      type: Input\n    }],\n    rippleRadius: [{\n      type: Input\n    }],\n    rippleUnbound: [{\n      type: Input\n    }],\n    ripple: [{\n      type: HostBinding,\n      args: ['class.ripple-surface']\n    }],\n    _createRipple: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass MdbRippleModule {}\n\nMdbRippleModule.ɵfac = function MdbRippleModule_Factory(t) {\n  return new (t || MdbRippleModule)();\n};\n\nMdbRippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbRippleModule\n});\nMdbRippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbRippleModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbRippleDirective],\n      imports: [],\n      exports: [MdbRippleDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbRippleDirective, MdbRippleModule };","map":{"version":3,"sources":["/Users/alexcampean/Documents/university/sem_4/WEB/examTemplates/javaTemplate/javaTemplateClient/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-ripple.mjs"],"names":["coerceBooleanProperty","i0","Directive","Input","HostBinding","HostListener","NgModule","TRANSITION_BREAK_OPACITY","GRADIENT","DEFAULT_RIPPLE_COLOR","BOOTSTRAP_COLORS","MdbRippleDirective","constructor","_elementRef","_renderer","_rippleCentered","rippleColor","rippleDuration","rippleRadius","_rippleUnbound","ripple","rippleCentered","value","rippleUnbound","host","nativeElement","_createRipple","event","layerX","layerY","offsetX","offsetY","height","offsetHeight","width","offsetWidth","duration","_durationToMsNumber","diameterOptions","diameter","_getDiameter","radiusValue","opacity","delay","styles","left","top","transitionDelay","transitionDuration","rippleHTML","createElement","_createHTMLRipple","_removeHTMLRipple","wrapper","Object","keys","forEach","property","style","addClass","_removeOldColorClasses","_addColor","_toggleUnbound","_appendRipple","setTimeout","remove","time","Number","replace","pythagorean","sideA","sideB","Math","sqrt","pow","positionCenter","quadrant","first","second","third","fourth","getCorner","topLeft","topRight","bottomLeft","bottomRight","target","parent","FIX_ADD_RIPPLE_EFFECT","appendChild","removeClass","isBootstrapColor","find","color","toLowerCase","rgbValue","_colorToRGB","join","gradientImage","split","backgroundImage","REGEXP_CLASS_COLOR","RegExp","PARENT_CLASSS_COLOR","classList","match","className","hexToRgb","HEX_COLOR_LENGTH","IS_SHORT_HEX","length","parseInt","substr","namedColorsToRgba","tempElem","document","body","flag","getComputedStyle","removeChild","rgbaToRgb","map","a","indexOf","ɵfac","ElementRef","Renderer2","ɵdir","type","args","selector","exportAs","MdbRippleModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\n\nconst TRANSITION_BREAK_OPACITY = 0.5;\nconst GRADIENT = 'rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%';\nconst DEFAULT_RIPPLE_COLOR = [0, 0, 0];\nconst BOOTSTRAP_COLORS = [\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'light',\n    'dark',\n];\nclass MdbRippleDirective {\n    constructor(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._rippleCentered = false;\n        this.rippleColor = '';\n        this.rippleDuration = '500ms';\n        this.rippleRadius = 0;\n        this._rippleUnbound = false;\n        this.ripple = true;\n    }\n    get rippleCentered() {\n        return this._rippleCentered;\n    }\n    set rippleCentered(value) {\n        this._rippleCentered = coerceBooleanProperty(value);\n    }\n    get rippleUnbound() {\n        return this._rippleUnbound;\n    }\n    set rippleUnbound(value) {\n        this._rippleUnbound = coerceBooleanProperty(value);\n    }\n    get host() {\n        return this._elementRef.nativeElement;\n    }\n    _createRipple(event) {\n        const { layerX, layerY } = event;\n        const offsetX = layerX;\n        const offsetY = layerY;\n        const height = this.host.offsetHeight;\n        const width = this.host.offsetWidth;\n        const duration = this._durationToMsNumber(this.rippleDuration);\n        const diameterOptions = {\n            offsetX: this.rippleCentered ? height / 2 : offsetX,\n            offsetY: this.rippleCentered ? width / 2 : offsetY,\n            height,\n            width,\n        };\n        const diameter = this._getDiameter(diameterOptions);\n        const radiusValue = this.rippleRadius || diameter / 2;\n        const opacity = {\n            delay: duration * TRANSITION_BREAK_OPACITY,\n            duration: duration - duration * TRANSITION_BREAK_OPACITY,\n        };\n        const styles = {\n            left: this.rippleCentered ? `${width / 2 - radiusValue}px` : `${offsetX - radiusValue}px`,\n            top: this.rippleCentered ? `${height / 2 - radiusValue}px` : `${offsetY - radiusValue}px`,\n            height: `${this.rippleRadius * 2 || diameter}px`,\n            width: `${this.rippleRadius * 2 || diameter}px`,\n            transitionDelay: `0s, ${opacity.delay}ms`,\n            transitionDuration: `${duration}ms, ${opacity.duration}ms`,\n        };\n        const rippleHTML = this._renderer.createElement('div');\n        this._createHTMLRipple(this.host, rippleHTML, styles);\n        this._removeHTMLRipple(rippleHTML, duration);\n    }\n    _createHTMLRipple(wrapper, ripple, styles) {\n        Object.keys(styles).forEach((property) => (ripple.style[property] = styles[property]));\n        this._renderer.addClass(ripple, 'ripple-wave');\n        if (this.rippleColor !== '') {\n            this._removeOldColorClasses(wrapper);\n            this._addColor(ripple, wrapper);\n        }\n        this._toggleUnbound(wrapper);\n        this._appendRipple(ripple, wrapper);\n    }\n    _removeHTMLRipple(ripple, duration) {\n        setTimeout(() => {\n            if (ripple) {\n                ripple.remove();\n            }\n        }, duration);\n    }\n    _durationToMsNumber(time) {\n        return Number(time.replace('ms', '').replace('s', '000'));\n    }\n    _getDiameter({ offsetX, offsetY, height, width }) {\n        const top = offsetY <= height / 2;\n        const left = offsetX <= width / 2;\n        const pythagorean = (sideA, sideB) => Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n        const positionCenter = offsetY === height / 2 && offsetX === width / 2;\n        // mouse position on the quadrants of the coordinate system\n        const quadrant = {\n            first: top === true && left === false,\n            second: top === true && left === true,\n            third: top === false && left === true,\n            fourth: top === false && left === false,\n        };\n        const getCorner = {\n            topLeft: pythagorean(offsetX, offsetY),\n            topRight: pythagorean(width - offsetX, offsetY),\n            bottomLeft: pythagorean(offsetX, height - offsetY),\n            bottomRight: pythagorean(width - offsetX, height - offsetY),\n        };\n        let diameter = 0;\n        if (positionCenter || quadrant.fourth) {\n            diameter = getCorner.topLeft;\n        }\n        else if (quadrant.third) {\n            diameter = getCorner.topRight;\n        }\n        else if (quadrant.second) {\n            diameter = getCorner.bottomRight;\n        }\n        else if (quadrant.first) {\n            diameter = getCorner.bottomLeft;\n        }\n        return diameter * 2;\n    }\n    _appendRipple(target, parent) {\n        const FIX_ADD_RIPPLE_EFFECT = 50; // delay for active animations\n        this._renderer.appendChild(parent, target);\n        setTimeout(() => {\n            this._renderer.addClass(target, 'active');\n        }, FIX_ADD_RIPPLE_EFFECT);\n    }\n    _toggleUnbound(target) {\n        if (this.rippleUnbound) {\n            this._renderer.addClass(target, 'ripple-surface-unbound');\n        }\n        else {\n            this._renderer.removeClass(target, 'ripple-surface-unbound');\n        }\n    }\n    _addColor(target, parent) {\n        const isBootstrapColor = BOOTSTRAP_COLORS.find((color) => color === this.rippleColor.toLowerCase());\n        if (isBootstrapColor) {\n            this._renderer.addClass(parent, `${'ripple-surface'}-${this.rippleColor.toLowerCase()}`);\n        }\n        else {\n            const rgbValue = this._colorToRGB(this.rippleColor).join(',');\n            const gradientImage = GRADIENT.split('{{color}}').join(`${rgbValue}`);\n            target.style.backgroundImage = `radial-gradient(circle, ${gradientImage})`;\n        }\n    }\n    _removeOldColorClasses(target) {\n        const REGEXP_CLASS_COLOR = new RegExp(`${'ripple-surface'}-[a-z]+`, 'gi');\n        const PARENT_CLASSS_COLOR = target.classList.value.match(REGEXP_CLASS_COLOR) || [];\n        PARENT_CLASSS_COLOR.forEach((className) => {\n            this._renderer.removeClass(target, className);\n        });\n    }\n    _colorToRGB(color) {\n        // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n        function hexToRgb(color) {\n            const HEX_COLOR_LENGTH = 7;\n            const IS_SHORT_HEX = color.length < HEX_COLOR_LENGTH;\n            if (IS_SHORT_HEX) {\n                color = `#${color[1]}${color[1]}${color[2]}${color[2]}${color[3]}${color[3]}`;\n            }\n            return [\n                parseInt(color.substr(1, 2), 16),\n                parseInt(color.substr(3, 2), 16),\n                parseInt(color.substr(5, 2), 16),\n            ];\n        }\n        // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n        function namedColorsToRgba(color) {\n            const tempElem = document.body.appendChild(document.createElement('fictum'));\n            const flag = 'rgb(1, 2, 3)';\n            tempElem.style.color = flag;\n            if (tempElem.style.color !== flag) {\n                return DEFAULT_RIPPLE_COLOR;\n            }\n            tempElem.style.color = color;\n            if (tempElem.style.color === flag || tempElem.style.color === '') {\n                return DEFAULT_RIPPLE_COLOR;\n            } // color parse failed\n            color = getComputedStyle(tempElem).color;\n            document.body.removeChild(tempElem);\n            return color;\n        }\n        // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n        function rgbaToRgb(color) {\n            color = color.match(/[.\\d]+/g).map((a) => +Number(a));\n            color.length = 3;\n            return color;\n        }\n        if (color.toLowerCase() === 'transparent') {\n            return DEFAULT_RIPPLE_COLOR;\n        }\n        if (color[0] === '#') {\n            return hexToRgb(color);\n        }\n        if (color.indexOf('rgb') === -1) {\n            color = namedColorsToRgba(color);\n        }\n        if (color.indexOf('rgb') === 0) {\n            return rgbaToRgb(color);\n        }\n        return DEFAULT_RIPPLE_COLOR;\n    }\n}\nMdbRippleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nMdbRippleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbRippleDirective, selector: \"[mdbRipple]\", inputs: { rippleCentered: \"rippleCentered\", rippleColor: \"rippleColor\", rippleDuration: \"rippleDuration\", rippleRadius: \"rippleRadius\", rippleUnbound: \"rippleUnbound\" }, host: { listeners: { \"click\": \"_createRipple($event)\" }, properties: { \"class.ripple-surface\": \"this.ripple\" } }, exportAs: [\"mdbRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbRipple]',\n                    exportAs: 'mdbRipple',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { rippleCentered: [{\n                type: Input\n            }], rippleColor: [{\n                type: Input\n            }], rippleDuration: [{\n                type: Input\n            }], rippleRadius: [{\n                type: Input\n            }], rippleUnbound: [{\n                type: Input\n            }], ripple: [{\n                type: HostBinding,\n                args: ['class.ripple-surface']\n            }], _createRipple: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass MdbRippleModule {\n}\nMdbRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleModule, declarations: [MdbRippleDirective], exports: [MdbRippleDirective] });\nMdbRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MdbRippleDirective],\n                    imports: [],\n                    exports: [MdbRippleDirective],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbRippleDirective, MdbRippleModule };\n"]},"metadata":{},"sourceType":"module"}